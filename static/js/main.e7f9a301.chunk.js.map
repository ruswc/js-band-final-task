{"version":3,"sources":["components/Header/logo.svg","helpers/storage.js","helpers/api.js","types/auth.js","services/auth.js","actions/auth.js","reducers/auth.js","services/books.js","actions/books.js","types/books.js","reducers/books.js","services/cart.js","actions/cart.js","types/cart.js","reducers/cart.js","reducers/index.js","middlewares/auth.js","store/index.js","serviceWorker.js","selectors/auth.js","selectors/cart.js","components/Spinner.js","components/Button.js","components/Avatar.js","components/Header/index.js","containers/Header.js","components/routes/GuestRoute.js","containers/routes/GuestRoute.js","components/routes/PrivateRoute.js","containers/routes/PrivateRoute.js","components/Container.js","components/Input.js","components/Hint.js","components/FormGroup.js","components/Form.js","pages/SignIn.js","selectors/books.js","components/Card.js","components/Select.js","pages/Books.js","pages/Book.js","pages/Cart.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","Storage","key","value","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","client","axios","create","baseURL","process","headers","interceptors","request","use","config","tempConfig","token","storage","Authorization","error","Promise","reject","response","status","store","dispatch","signOut","setAuthHeader","defaults","common","data","url","method","setAuthRequest","createAction","setAuthSuccess","setAuthFailure","signIn","a","async","services","avatar","username","initialState","isAuthenticated","isLoading","errors","user","handleActions","state","payload","id","fetchBooksRequest","fetchBooksSuccess","fetchBooksFailure","fetchSingleBookRequest","fetchSingleBookSuccess","fetchSingleBookFailure","fetchSingleBook","fetchBooks","books","combineActions","isSingleLoading","addToCart","purchaseRequest","purchaseSuccess","purchaseFailure","purchase","length","message","alert","items","actions","count","rest","combineReducers","auth","cart","authMiddleware","next","action","type","persistConfig","blacklist","persistedReducer","persistReducer","reducer","Boolean","window","location","hostname","match","isAuthenticatedSelector","isLoadingSelector","authErrorsSelector","userSelector","cartSelector","cartLoadingSelector","cartSummarySelector","createSelector","list","Object","keys","map","total","price","toFixed","cartProductsCountSelector","reduce","acc","cartTotalPriceSelector","booksIdSelector","getCountById","Spinner","color","size","growing","text","classes","classNames","className","role","defaultProps","Button","children","to","loading","disabled","block","onClick","e","Avatar","src","alt","width","height","Header","cartCount","logo","mapDispatchToProps","connect","GuestRoute","isGuest","Component","component","render","props","PrivateRoute","Row","Col","Container","fluid","Input","name","placeholder","min","max","onChange","target","Hint","show","FormGroup","Form","onSubmit","preventDefault","SignIn","handleOnChange","setState","handleOnSubmit","errorMessage","this","isFailured","isSingleLoadingSelector","booksSelector","getBookById","find","item","Title","Body","Text","Cover","Footer","Card","Select","options","onBlur","option","label","Books","handleChange","title","setTimeout","search","fetchData","filter","filteredItems","includes","cover","author","booksActions","setFilterField","cartActions","Book","handleCountChange","handleAddToCart","params","description","level","tags","join","Cart","isCartEmpty","itemsIds","scope","align","colSpan","NotFound","App","path","exact","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e7f9a301.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a813330e.svg\";","export default class Storage {\n  static setItem(key, value) {\n    localStorage.setItem(key, JSON.stringify(value))\n  }\n\n  static getItem(key) {\n    return JSON.parse(localStorage.getItem(key))\n  }\n\n  static removeItem(key) {\n    localStorage.removeItem(key)\n  }\n}\n","import axios from \"axios\"\nimport { AUTH_TOKEN_KEY } from \"types/auth\"\nimport storage from \"helpers/storage\"\nimport { store } from \"index\"\nimport { signOut } from \"actions/auth\"\n\nconst client = axios.create({\n  baseURL: process.env.REACT_APP_API_ROOT,\n  headers: { \"Content-Type\": \"application/json\" }\n})\n\nclient.interceptors.request.use(\n  config => {\n    const tempConfig = { ...config }\n    const token = storage.getItem(AUTH_TOKEN_KEY)\n\n    if (token) {\n      tempConfig.headers.Authorization = token\n    }\n\n    return tempConfig\n  },\n  error => {\n    return Promise.reject(error)\n  }\n)\n\nclient.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response.status === 401) {\n      store.dispatch(signOut())\n      storage.removeItem(AUTH_TOKEN_KEY)\n    }\n\n    return Promise.reject(error)\n  }\n)\n\nclient.setAuthHeader = token => {\n  client.defaults.headers.common = { Authorization: token }\n}\n\nexport default client\n","export const AUTH_TOKEN_KEY = \"jsBandAuthToken\"\n\nexport const SIGN_OUT = \"SIGN_OUT\"\nexport const SET_AUTH_REQUEST = \"SET_AUTH_REQUEST\"\nexport const SET_AUTH_SUCCESS = \"SET_AUTH_SUCCESS\"\nexport const SET_AUTH_FAILURE = \"SET_AUTH_FAILURE\"\n","import client from \"helpers/api\"\n\nexport default {\n  signIn: data =>\n    client({\n      url: \"/signin\",\n      method: \"POST\",\n      data\n    })\n}\n","import { createAction } from \"redux-actions\"\nimport services from \"services/auth\"\nimport storage from \"helpers/storage\"\nimport client from \"helpers/api\"\n\nimport {\n  AUTH_TOKEN_KEY,\n  SET_AUTH_REQUEST,\n  SET_AUTH_SUCCESS,\n  SET_AUTH_FAILURE,\n  SIGN_OUT\n} from \"types/auth\"\n\nexport const setAuthRequest = createAction(SET_AUTH_REQUEST)\nexport const setAuthSuccess = createAction(SET_AUTH_SUCCESS)\nexport const setAuthFailure = createAction(SET_AUTH_FAILURE)\n\nexport const signIn = value => async dispatch => {\n  dispatch(setAuthRequest(true))\n\n  try {\n    const {\n      data: { token, avatar, username }\n    } = await services.signIn(value)\n\n    if (token) {\n      storage.setItem(AUTH_TOKEN_KEY, token)\n      client.setAuthHeader(token)\n    }\n\n    dispatch(setAuthSuccess({ username, avatar }))\n  } catch (errors) {\n    const { response: { data } = {} } = errors\n    dispatch(setAuthFailure(data))\n  } finally {\n    dispatch(setAuthRequest(false))\n  }\n}\n\nexport const signOut = createAction(SIGN_OUT)\n\nexport default {\n  signIn,\n  signOut,\n  setAuthRequest,\n  setAuthSuccess,\n  setAuthFailure\n}\n","/* eslint-disable import/no-cycle */\nimport { handleActions } from \"redux-actions\"\nimport {\n  signOut,\n  setAuthRequest,\n  setAuthSuccess,\n  setAuthFailure\n} from \"actions/auth\"\n\nconst initialState = {\n  isAuthenticated: false,\n  isLoading: false,\n  errors: {},\n  user: {}\n}\n\nexport default handleActions(\n  {\n    [setAuthRequest]: (state, { payload }) => ({\n      ...state,\n      isLoading: payload\n    }),\n\n    [setAuthSuccess]: (state, { payload }) => ({\n      ...state,\n      isAuthenticated: true,\n      user: payload,\n      errors: {}\n    }),\n\n    [setAuthFailure]: (state, { payload }) => ({\n      ...state,\n      errors: payload\n    }),\n\n    [signOut]: () => initialState\n  },\n  initialState\n)\n","import client from \"helpers/api\"\n\nexport default {\n  fetchData: () =>\n    client({\n      url: \"/books\",\n      method: \"GET\"\n    }),\n\n  fetchSingle: id =>\n    client({\n      url: `/books/${id}`,\n      method: \"GET\"\n    })\n}\n","import { createAction } from \"redux-actions\"\nimport services from \"services/books\"\n\nimport {\n  FETCH_BOOKS_REQUEST,\n  FETCH_BOOKS_SUCCESS,\n  FETCH_BOOKS_FAILURE,\n  FETCH_SINGLE_BOOK_REQUEST,\n  FETCH_SINGLE_BOOK_SUCCESS,\n  FETCH_SINGLE_BOOK_FAILURE\n} from \"types/books\"\n\nexport const fetchBooksRequest = createAction(FETCH_BOOKS_REQUEST)\nexport const fetchBooksSuccess = createAction(FETCH_BOOKS_SUCCESS)\nexport const fetchBooksFailure = createAction(FETCH_BOOKS_FAILURE)\n\nexport const fetchBooks = () => async dispatch => {\n  try {\n    const { data } = await services.fetchData()\n\n    dispatch(fetchBooksSuccess(data))\n  } catch (errors) {\n    dispatch(fetchBooksFailure(errors.response.data))\n  } finally {\n    dispatch(fetchBooksRequest(false))\n  }\n}\n\nexport const fetchSingleBookRequest = createAction(FETCH_SINGLE_BOOK_REQUEST)\nexport const fetchSingleBookSuccess = createAction(FETCH_SINGLE_BOOK_SUCCESS)\nexport const fetchSingleBookFailure = createAction(FETCH_SINGLE_BOOK_FAILURE)\n\nexport const fetchSingleBook = id => async dispatch => {\n  try {\n    const { data } = await services.fetchSingle(id)\n\n    dispatch(fetchSingleBookSuccess(data))\n  } catch (errors) {\n    dispatch(fetchSingleBookFailure(errors.response.data))\n  } finally {\n    dispatch(fetchSingleBookRequest(false))\n  }\n}\n\nexport default {\n  fetchBooks,\n  fetchBooksRequest,\n  fetchBooksSuccess,\n  fetchBooksFailure,\n  fetchSingleBook,\n  fetchSingleBookRequest,\n  fetchSingleBookSuccess,\n  fetchSingleBookFailure\n}\n","export const FETCH_BOOKS_REQUEST = \"FETCH_BOOKS_REQUEST\"\nexport const FETCH_BOOKS_SUCCESS = \"FETCH_BOOKS_SUCCESS\"\nexport const FETCH_BOOKS_FAILURE = \"FETCH_BOOKS_FAILURE\"\n\nexport const FETCH_SINGLE_BOOK_REQUEST = \"FETCH_SINGLE_BOOK_REQUEST\"\nexport const FETCH_SINGLE_BOOK_SUCCESS = \"FETCH_SINGLE_BOOK_SUCCESS\"\nexport const FETCH_SINGLE_BOOK_FAILURE = \"FETCH_SINGLE_BOOK_FAILURE\"\n","/* eslint-disable import/no-cycle */\nimport { handleActions, combineActions } from \"redux-actions\"\nimport {\n  fetchBooksRequest,\n  fetchBooksSuccess,\n  fetchBooksFailure,\n  fetchSingleBookRequest,\n  fetchSingleBookSuccess,\n  fetchSingleBookFailure\n} from \"actions/books\"\n\nconst initialState = {\n  isLoading: true,\n  isSingleLoading: true,\n  errors: {},\n  books: []\n}\n\nexport default handleActions(\n  {\n    [fetchBooksRequest]: (state, { payload }) => ({\n      ...state,\n      isLoading: payload\n    }),\n\n    [fetchBooksSuccess]: (state, { payload }) => ({\n      ...state,\n      books: payload,\n      errors: {}\n    }),\n\n    [combineActions(fetchBooksFailure, fetchSingleBookFailure)]: (\n      state,\n      { payload }\n    ) => ({\n      ...state,\n      errors: payload\n    }),\n\n    [fetchSingleBookRequest]: (state, { payload }) => ({\n      ...state,\n      isSingleLoading: payload\n    }),\n\n    [fetchSingleBookSuccess]: (state, { payload }) => ({\n      ...state,\n      books: [...state.books, payload],\n      errors: {}\n    })\n  },\n  initialState\n)\n","import client from \"helpers/api\"\n\nexport default {\n  purchase: data =>\n    client({\n      url: \"/purchase\",\n      method: \"POST\",\n      data\n    })\n}\n","import { createAction } from \"redux-actions\"\n\nimport {\n  ADD_TO_CART,\n  PURCHASE_REQUEST,\n  PURCHASE_SUCCESS,\n  PURCHASE_FAILURE\n} from \"types/cart\"\n\nimport services from \"services/cart\"\n\nexport const addToCart = createAction(ADD_TO_CART)\n\nexport const purchaseRequest = createAction(PURCHASE_REQUEST)\nexport const purchaseSuccess = createAction(PURCHASE_SUCCESS)\nexport const purchaseFailure = createAction(PURCHASE_FAILURE)\n\nexport const purchase = ({ books = [] }) => async dispatch => {\n  if (!books.length) return\n\n  dispatch(purchaseRequest(true))\n\n  try {\n    const {\n      data: { message }\n    } = await services.purchase({ books })\n    // eslint-disable-next-line no-alert\n    alert(message)\n    dispatch(purchaseSuccess())\n  } catch (errors) {\n    dispatch(purchaseFailure())\n  } finally {\n    dispatch(purchaseRequest(false))\n  }\n}\n\nexport default {\n  addToCart,\n  purchase,\n  purchaseRequest,\n  purchaseSuccess,\n  purchaseFailure\n}\n","export const ADD_TO_CART = \"ADD_TO_CART\"\n\nexport const PURCHASE_REQUEST = \"PURCHASE_REQUEST\"\nexport const PURCHASE_SUCCESS = \"PURCHASE_SUCCESS\"\nexport const PURCHASE_FAILURE = \"PURCHASE_FAILURE\"\n\nexport default {\n  ADD_TO_CART,\n  PURCHASE_REQUEST,\n  PURCHASE_SUCCESS,\n  PURCHASE_FAILURE\n}\n","/* eslint-disable import/no-cycle */\n/* eslint-disable import/no-named-as-default-member */\nimport { handleActions } from \"redux-actions\"\nimport actions from \"actions/cart\"\n\nconst initialState = {\n  isLoading: false,\n  items: {}\n}\n\nexport default handleActions(\n  {\n    [actions.addToCart]: (state, { payload: { id, count, ...rest } }) => ({\n      ...state,\n      items: {\n        ...state.items,\n        [id]: state.items[id]\n          ? {\n              ...rest,\n              count: +state.items[id].count + +count\n            }\n          : { count, ...rest }\n      }\n    }),\n\n    [actions.purchaseRequest]: (state, { payload }) => ({\n      ...state,\n      isLoading: payload\n    }),\n\n    [actions.purchaseSuccess]: () => initialState\n  },\n  initialState\n)\n","import { combineReducers } from \"redux\"\n\nimport auth from \"./auth\"\nimport books from \"./books\"\nimport cart from \"./cart\"\n\nexport default combineReducers({\n  auth,\n  books,\n  cart\n})\n","import { SIGN_OUT, AUTH_TOKEN_KEY } from \"types/auth\"\nimport storage from \"helpers/storage\"\n\nconst authMiddleware = () => next => action => {\n  if (action.type === SIGN_OUT) {\n    storage.removeItem(AUTH_TOKEN_KEY)\n  }\n  next(action)\n}\n\nexport default authMiddleware\n","import { createStore, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport { persistStore, persistReducer } from \"redux-persist\"\nimport storage from \"redux-persist/lib/storage\"\nimport { composeWithDevTools } from \"redux-devtools-extension\"\nimport reducer from \"reducers\"\nimport authMiddleware from \"middlewares/auth\"\n\nconst persistConfig = {\n  key: \"JSBandInternship\",\n  storage,\n  blacklist: [\"books\"]\n}\n\nconst persistedReducer = persistReducer(persistConfig, reducer)\n\nexport default () => {\n  const store = createStore(\n    persistedReducer,\n    composeWithDevTools(applyMiddleware(thunk, authMiddleware))\n  )\n  const persistor = persistStore(store)\n\n  return { store, persistor }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","/* eslint-disable import/prefer-default-export */\nexport const isAuthenticatedSelector = state => state.auth.isAuthenticated\n\nexport const isLoadingSelector = state => state.auth.isLoading\n\nexport const authErrorsSelector = state => state.auth.errors\n\nexport const userSelector = state => state.auth.user\n","import { createSelector } from \"reselect\"\n\nexport const cartSelector = state => state.cart.items\n\nexport const cartLoadingSelector = state => state.cart.isLoading\n\nexport const cartSummarySelector = createSelector(cartSelector, list =>\n  Object.keys(list).map(id => ({\n    ...list[id],\n    id,\n    total: +(+list[id].count * +list[id].price).toFixed(2)\n  }))\n)\n\nexport const cartProductsCountSelector = createSelector(\n  cartSummarySelector,\n  list => list.reduce((acc, { count = 0 }) => acc + count, 0)\n)\n\nexport const cartTotalPriceSelector = createSelector(\n  cartSummarySelector,\n  list => +list.reduce((acc, { total = 0 }) => acc + total, 0).toFixed(2)\n)\n\nexport const booksIdSelector = createSelector(cartSelector, items =>\n  Object.keys(items)\n)\n\nexport const getCountById = id =>\n  createSelector(cartSelector, items => items[id])\n\nexport default {\n  cartSelector,\n  getCountById,\n  cartSummarySelector,\n  cartTotalPriceSelector,\n  cartProductsCountSelector\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\n\nconst Spinner = ({ color, size, growing, text }) => {\n  const classes = classNames({\n    \"spinner-border\": !growing,\n    \"spinner-grow\": growing,\n    [`text-${color}`]: color,\n    [`spinner-border-${size}`]: size\n  })\n\n  return (\n    <div className=\"d-flex align-items-center justify-content-center\">\n      <div className={classes} role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n      <span className=\"ml-3\">{text}</span>\n    </div>\n  )\n}\n\nSpinner.defaultProps = {\n  color: \"\",\n  size: \"\",\n  text: \"\",\n  growing: false\n}\n\nSpinner.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.string,\n  text: PropTypes.string,\n  growing: PropTypes.bool\n}\n\nexport default Spinner\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\"\nimport classNames from \"classnames\"\n\nimport Spinner from \"./Spinner\"\n\nconst Button = ({\n  children,\n  value,\n  to,\n  loading,\n  disabled,\n  type,\n  color,\n  block,\n  className,\n  onClick\n}) => {\n  const classes = classNames(\"btn\", {\n    \"btn-block\": block,\n    [`btn-${color}`]: color,\n    [className]: className\n  })\n\n  return to ? (\n    <Link to={to} className={classes}>\n      {children}\n    </Link>\n  ) : (\n    // eslint-disable-next-line react/button-has-type\n    <button\n      type={type}\n      value={value}\n      disabled={disabled}\n      className={classes}\n      onClick={onClick}\n    >\n      {loading ? <Spinner size=\"sm\" /> : children}\n    </button>\n  )\n}\n\nButton.defaultProps = {\n  children: null,\n  color: \"\",\n  block: false,\n  type: \"button\",\n  loading: false,\n  to: \"\",\n  value: \"\",\n  disabled: false,\n  className: \"\",\n  onClick: e => e\n}\n\nButton.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.string,\n  block: PropTypes.bool,\n  type: PropTypes.string,\n  loading: PropTypes.bool,\n  to: PropTypes.string,\n  value: PropTypes.string,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func\n}\n\nexport default Button\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Avatar = ({ src, alt }) => (\n  <img src={src} alt={alt} className=\"rounded-circle\" width=\"38\" height=\"38\" />\n)\n\nAvatar.defaultProps = {\n  src: \"\",\n  alt: \"\"\n}\n\nAvatar.propTypes = {\n  src: PropTypes.string,\n  alt: PropTypes.string\n}\n\nexport default Avatar\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\"\n\nimport Button from \"components/Button\"\nimport Avatar from \"components/Avatar\"\n\nimport logo from \"./logo.svg\"\n\nconst Header = ({ isAuthenticated, user, cartCount, signOut }) => {\n  const handleSignOut = () => signOut()\n\n  return (\n    <header>\n      {/* <nav className=\"navbar navbar-light bg-light mb-3 fixed-top\"> */}\n      <nav className=\"navbar navbar-dark bg-light mb-3 fixed-top\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          <img alt=\"\" src={logo} className=\"mr-4\" />\n          JS Band Store\n        </Link>\n        <div className=\"d-flex align-item-center ml-auto\">\n          {isAuthenticated && (\n            <>\n              <Button to=\"/cart\" color=\"primary\">\n                Cart ({cartCount})\n              </Button>\n              <Button color=\"primary\" className=\"ml-2\" onClick={handleSignOut}>\n                Sign out\n              </Button>\n            </>\n          )}\n          {user && (\n            <div className=\"d-inline-flex align-items-center ml-3\">\n              <Avatar src={user.avatar} alt={user.username} />\n              <b className=\"ml-2\">{user.username}</b>\n            </div>\n          )}\n        </div>\n      </nav>\n    </header>\n  )\n}\n\nHeader.defaultProps = {\n  isAuthenticated: false,\n  user: {\n    username: \"\",\n    avatar: \"\"\n  },\n  cartCount: 0,\n  signOut: () => true\n}\n\nHeader.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  user: PropTypes.shape({\n    username: PropTypes.string,\n    avatar: PropTypes.string\n  }),\n  cartCount: PropTypes.number,\n  signOut: PropTypes.func\n}\n\nexport default Header\n","import { connect } from \"react-redux\"\nimport { isAuthenticatedSelector, userSelector } from \"selectors/auth\"\nimport { cartProductsCountSelector } from \"selectors/cart\"\nimport { signOut } from \"actions/auth\"\nimport Header from \"components/Header\"\n\nconst mapStateToProps = state => ({\n  isAuthenticated: isAuthenticatedSelector(state),\n  user: userSelector(state),\n  cartCount: cartProductsCountSelector(state)\n})\n\nconst mapDispatchToProps = {\n  signOut\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Route, Redirect } from \"react-router-dom\"\n\nconst GuestRoute = ({ isGuest, component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (isGuest ? <Component {...props} /> : <Redirect to=\"/\" />)}\n  />\n)\n\nGuestRoute.defaultProps = {\n  isGuest: false\n}\n\nGuestRoute.propTypes = {\n  isGuest: PropTypes.bool\n}\n\nexport default GuestRoute\n","import { connect } from \"react-redux\"\nimport { isAuthenticatedSelector } from \"selectors/auth\"\nimport GuestRoute from \"components/routes/GuestRoute\"\n\nconst mapStateToProps = state => ({\n  isGuest: !isAuthenticatedSelector(state)\n})\n\nexport default connect(mapStateToProps)(GuestRoute)\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Route, Redirect } from \"react-router-dom\"\n\nconst PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/signin\" />\n    }\n  />\n)\n\nPrivateRoute.defaultProps = {\n  isAuthenticated: false\n  // component: null\n}\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool\n  // component: PropTypes.node\n}\n\nexport default PrivateRoute\n","import { connect } from \"react-redux\"\nimport { isAuthenticatedSelector } from \"selectors/auth\"\nimport PrivateRoute from \"components/routes/PrivateRoute\"\n\nconst mapStateToProps = state => ({\n  isAuthenticated: isAuthenticatedSelector(state)\n})\n\nexport default connect(mapStateToProps)(PrivateRoute)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\n\nconst Row = ({ children, className }) => {\n  const classes = classNames(\"row\", {\n    [className]: className\n  })\n  return <div className={classes}>{children}</div>\n}\n\nconst Col = ({ children, className }) => {\n  const classes = classNames(\"col\", {\n    [className]: className\n  })\n  return <div className={classes}>{children}</div>\n}\n\nconst Container = ({ children, fluid, className }) => {\n  const classes = classNames(\"container\", {\n    \"container-fluid\": fluid,\n    [className]: className\n  })\n\n  return <div className={classes}>{children}</div>\n}\n\nContainer.Row = Row\nContainer.Col = Col\n\nContainer.defaultProps = {\n  children: null,\n  className: \"\",\n  fluid: false\n}\n\nContainer.propTypes = {\n  children: PropTypes.node,\n  fluid: PropTypes.bool,\n  className: PropTypes.string\n}\n\nRow.defaultProps = {\n  children: null,\n  className: \"\"\n}\n\nRow.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n}\n\nCol.defaultProps = {\n  children: null,\n  className: \"\"\n}\n\nCol.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n}\n\nexport default Container\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Input = ({\n  type,\n  value,\n  name,\n  placeholder,\n  disabled,\n  min,\n  max,\n  onChange\n}) => {\n  const handleChange = e => {\n    if ((max && e.target.value > max) || (min && e.target.value < min)) return\n\n    onChange(e)\n  }\n  return (\n    <input\n      type={type}\n      value={value}\n      name={name}\n      placeholder={placeholder}\n      min={min}\n      max={max}\n      disabled={disabled}\n      className=\"form-control\"\n      onChange={handleChange}\n    />\n  )\n}\n\nInput.defaultProps = {\n  type: \"text\",\n  value: \"\",\n  name: \"\",\n  placeholder: \"\",\n  min: 0,\n  max: 1000,\n  disabled: false\n}\n\nInput.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  placeholder: PropTypes.string,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func.isRequired\n}\n\nexport default Input\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\n\nconst Hint = ({ children, text, show, type }) => {\n  const classes = classNames({\n    \"d-block\": show,\n    \"invalid-feedback\": type === \"error\",\n    \"valid-feedback\": type === \"success\"\n  })\n\n  return (\n    <div className={classes}>\n      {text}\n      {children}\n    </div>\n  )\n}\n\nHint.defaultProps = {\n  show: false,\n  text: \"\",\n  children: null,\n  type: \"success\"\n}\n\nHint.propTypes = {\n  show: PropTypes.bool,\n  children: PropTypes.node,\n  type: PropTypes.string,\n  text: PropTypes.string\n}\n\nexport default Hint\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst FormGroup = ({ children }) => <div className=\"form-group\">{children}</div>\n\nFormGroup.defaultProps = {\n  children: null\n}\n\nFormGroup.propTypes = {\n  children: PropTypes.node\n}\n\nexport default FormGroup\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Input from \"./Input\"\nimport Hint from \"./Hint\"\nimport Button from \"./Button\"\nimport FormGroup from \"./FormGroup\"\n\nconst Form = ({ children, onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault()\n    onSubmit(e)\n  }\n  return (\n    <form className=\"form w-100\" onSubmit={handleSubmit}>\n      {children}\n    </form>\n  )\n}\n\nForm.Input = Input\nForm.Hint = Hint\nForm.Button = Button\nForm.FormGroup = FormGroup\n\nForm.defaultProps = {\n  children: null\n}\n\nForm.propTypes = {\n  children: PropTypes.node,\n  onSubmit: PropTypes.func.isRequired\n}\n\nexport default Form\n","/* eslint-disable react/prop-types */\nimport React, { Component } from \"react\"\nimport PropsTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\n\nimport { signIn } from \"actions/auth\"\nimport { isLoadingSelector, authErrorsSelector } from \"selectors/auth\"\n\nimport Container from \"components/Container\"\nimport Form from \"components/Form\"\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      username: \"\",\n      errorMessage: \"\"\n    }\n  }\n\n  handleOnChange = ({ target: { value } }) => this.setState({ username: value })\n\n  handleOnSubmit = () => {\n    const { onSubmit } = this.props\n    const { username } = this.state\n\n    if (!username || username.length < 4 || username.length > 16)\n      return this.setState(() => ({ errorMessage: \"Field is not valid\" }))\n\n    onSubmit({ username })\n\n    return null\n  }\n\n  render() {\n    const {\n      isLoading,\n      errors: { message }\n    } = this.props\n    const { username, errorMessage } = this.state\n    const isFailured =\n      errorMessage.length !== 0 || (message && message.length !== 0)\n\n    return (\n      <Container className=\"h-100 d-flex align-items-center justify-content-center\">\n        <Container.Col className=\"col-5\">\n          <Form onSubmit={this.handleOnSubmit}>\n            <Form.FormGroup>\n              <Form.Input\n                value={username}\n                placeholder=\"Type Username\"\n                onChange={this.handleOnChange}\n              />\n              <Form.Hint\n                show={isFailured}\n                text={errorMessage || message}\n                type=\"error\"\n              />\n            </Form.FormGroup>\n            <Form.FormGroup>\n              <Form.Button\n                loading={isLoading}\n                disabled={!username}\n                type=\"submit\"\n                color=\"primary\"\n                block\n              >\n                Sign-In\n              </Form.Button>\n            </Form.FormGroup>\n          </Form>\n        </Container.Col>\n      </Container>\n    )\n  }\n}\n\nSignIn.propTypes = {\n  isLoading: PropsTypes.bool,\n  onSubmit: PropsTypes.func.isRequired,\n  errors: PropsTypes.shape({})\n}\n\nSignIn.defaultProps = {\n  isLoading: false,\n  errors: {}\n}\n\nconst mapStateToProps = state => ({\n  isLoading: isLoadingSelector(state),\n  errors: authErrorsSelector(state)\n})\n\nconst mapDispatchToProps = {\n  onSubmit: signIn\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","/* eslint-disable import/prefer-default-export */\nimport { createSelector } from \"reselect\"\n\nexport const isLoadingSelector = state => state.books.isLoading\n\nexport const isSingleLoadingSelector = state => state.books.isSingleLoading\n\nexport const booksSelector = state => state.books.books\n\nexport const getBookById = id =>\n  createSelector(booksSelector, books => books.find(item => item.id === id))\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\n\nconst Title = ({ children }) => <h2 className=\"card-title h5\">{children}</h2>\n\nconst Body = ({ children }) => <div className=\"card-body\">{children}</div>\n\nconst Col = ({ children, className }) => (\n  <div\n    className={classNames(\"col\", {\n      [className]: className\n    })}\n  >\n    {children}\n  </div>\n)\n\nconst Row = ({ children, className }) => (\n  <div\n    className={classNames(\"row\", {\n      [className]: className\n    })}\n  >\n    {children}\n  </div>\n)\n\nconst Text = ({ children, className }) => (\n  <div\n    className={classNames(\"card-text\", {\n      [className]: className\n    })}\n  >\n    {children}\n  </div>\n)\n\nconst Cover = ({ src, alt }) => (\n  <img src={src} className=\"card-img-top img-fluid\" alt={alt} />\n)\n\nconst Footer = ({ children }) => <div className=\"card-footer\">{children}</div>\n\nconst Card = ({ children, className }) => (\n  <div\n    className={classNames(\"card\", {\n      [className]: className\n    })}\n  >\n    {children}\n  </div>\n)\n\nCard.Title = Title\nCard.Text = Text\nCard.Body = Body\nCard.Cover = Cover\nCard.Footer = Footer\nCard.Col = Col\nCard.Row = Row\n\nTitle.defaultProps = {\n  children: null\n}\n\nTitle.propTypes = {\n  children: PropTypes.node\n}\n\nBody.defaultProps = {\n  children: null\n}\n\nBody.propTypes = {\n  children: PropTypes.node\n}\n\nText.defaultProps = {\n  children: null,\n  className: \"\"\n}\n\nText.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n}\n\nCover.defaultProps = {\n  src: \"\",\n  alt: \"\"\n}\n\nCover.propTypes = {\n  src: PropTypes.string,\n  alt: PropTypes.string\n}\n\nFooter.defaultProps = {\n  children: null\n}\n\nFooter.propTypes = {\n  children: PropTypes.node\n}\n\nCol.defaultProps = {\n  children: null,\n  className: \"\"\n}\n\nCol.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n}\n\nRow.defaultProps = {\n  children: null,\n  className: \"\"\n}\n\nRow.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n}\n\nCard.defaultProps = {\n  children: null,\n  className: \"\"\n}\n\nCard.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n}\n\nexport default Card\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Select = ({\n  type,\n  value,\n  name,\n  placeholder,\n  disabled,\n  options,\n  onBlur,\n  onChange\n}) => {\n  const handleChange = e => onChange(e)\n\n  return (\n    <select\n      type={type}\n      value={value}\n      name={name}\n      placeholder={placeholder}\n      disabled={disabled}\n      className=\"form-control\"\n      onBlur={onBlur}\n      onChange={handleChange}\n    >\n      {options.map(option => (\n        <option key={option.label} value={option.value}>\n          {option.label}\n        </option>\n      ))}\n    </select>\n  )\n}\n\nSelect.defaultProps = {\n  type: \"text\",\n  value: \"\",\n  name: \"\",\n  placeholder: \"\",\n  disabled: false,\n  onChange: e => e,\n  onBlur: e => e\n}\n\nSelect.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n        .isRequired\n    })\n  ).isRequired,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func\n}\n\nexport default Select\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable import/no-named-as-default-member */\n/* eslint-disable react/prop-types */\nimport React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\n\nimport booksActions from \"actions/books\"\nimport cartActions from \"actions/cart\"\nimport { isLoadingSelector, booksSelector } from \"selectors/books\"\n\nimport Container from \"components/Container\"\nimport Button from \"components/Button\"\nimport Card from \"components/Card\"\nimport Spinner from \"components/Spinner\"\nimport Input from \"components/Input\"\nimport Select from \"components/Select\"\n\nclass Books extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      items: [],\n      cart: null,\n      search: \"\",\n      price: \"all\"\n    }\n  }\n\n  componentDidMount() {\n    const { fetchData } = this.props\n\n    fetchData()\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.items !== state.items) {\n      return {\n        items: props.items\n      }\n    }\n\n    return null\n  }\n\n  handleChange = ({ target: { value, name } }) => {\n    this.setState(() => ({\n      [name]: value\n    }))\n  }\n\n  addToCart = ({ target: { value } }) => {\n    const { addToCart } = this.props\n    const { id = \"\", title = \"\", price = 0 } = JSON.parse(value)\n\n    this.setState(\n      () => ({ cart: id }),\n      () => {\n        addToCart({ id, count: 1, title, price })\n        setTimeout(() => this.setState(() => ({ cart: null })), 1000)\n      }\n    )\n  }\n\n  render() {\n    const { isLoading } = this.props\n    const { cart, search, price, items } = this.state\n    const options = [\n      {\n        label: \"All\",\n        value: \"all\",\n        filter: a => a\n      },\n      {\n        label: \"0 < price < 15\",\n        value: \"l1\",\n        filter: a => a.price < 15\n      },\n      {\n        label: \"15 < price < 30\",\n        value: \"15to30\",\n        filter: a => a.price >= 15 && a.price < 30\n      },\n      {\n        label: \"price > 30\",\n        value: \"m30\",\n        filter: a => a.price >= 30\n      }\n    ]\n\n    const filteredItems = items.filter(\n      item =>\n        options.find(option => option.value === price).filter(item) &&\n        item.title.includes(search)\n    )\n\n    if (isLoading) {\n      return (\n        <Container>\n          <Spinner growing />\n        </Container>\n      )\n    }\n\n    return (\n      <>\n        <Container className=\"mb-3\">\n          <Container.Row>\n            <Container.Col className=\"col-3\">\n              <Input\n                value={search}\n                name=\"search\"\n                placeholder=\"Search by book name\"\n                onChange={this.handleChange}\n              />\n            </Container.Col>\n            <Container.Col className=\"col-3\">\n              <Select\n                value={price}\n                options={options}\n                name=\"price\"\n                onChange={this.handleChange}\n              />\n            </Container.Col>\n          </Container.Row>\n        </Container>\n        <Container>\n          <Container.Row>\n            {filteredItems.length !== 0 ? (\n              filteredItems.map(item => (\n                <div\n                  key={item.id}\n                  className=\"col-12 col-md-6 col-lg-4 col-xl-3 mb-5\"\n                >\n                  <Card className=\"h-100\">\n                    <Card.Cover src={item.cover} alt={item.title} />\n                    <Card.Body>\n                      <Card.Title>{item.title}</Card.Title>\n                      <Card.Text>{item.author}</Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                      <Card.Row className=\"align-items-center\">\n                        <Card.Col className=\"col-3 text-nowrap\">\n                          ${item.price}\n                        </Card.Col>\n                        <Card.Col className=\"text-right col-9\">\n                          <Button\n                            color=\"primary\"\n                            value={JSON.stringify(item)}\n                            onClick={this.addToCart}\n                            className=\"text-nowrap mt-2\"\n                          >\n                            {cart === item.id ? \"Added\" : \"Add to cart\"}\n                          </Button>\n                          <Button\n                            to={`/books/${item.id}`}\n                            color=\"primary\"\n                            className=\"ml-2 text-nowrap mt-2\"\n                          >\n                            View\n                          </Button>\n                        </Card.Col>\n                      </Card.Row>\n                    </Card.Footer>\n                  </Card>\n                </div>\n              ))\n            ) : (\n              <Container.Col className=\"text-center\">\n                <h1>No books</h1>\n              </Container.Col>\n            )}\n          </Container.Row>\n        </Container>\n      </>\n    )\n  }\n}\n\nBooks.propTypes = {\n  isLoading: PropTypes.bool,\n  items: PropTypes.arrayOf(PropTypes.shape({})),\n  fetchData: PropTypes.func.isRequired,\n  addToCart: PropTypes.func.isRequired\n}\n\nBooks.defaultProps = {\n  isLoading: true,\n  items: []\n}\n\nconst mapStateToProps = state => ({\n  isLoading: isLoadingSelector(state),\n  items: booksSelector(state)\n})\n\nconst mapDispatchToProps = {\n  fetchData: booksActions.fetchBooks,\n  setFilterField: booksActions.setFilterField,\n  addToCart: cartActions.addToCart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Books)\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-named-as-default-member */\nimport React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\n\nimport { fetchSingleBook } from \"actions/books\"\nimport cartActions from \"actions/cart\"\nimport { isSingleLoadingSelector, getBookById } from \"selectors/books\"\nimport { getCountById } from \"selectors/cart\"\n\nimport Container from \"components/Container\"\nimport Card from \"components/Card\"\nimport FormGroup from \"components/FormGroup\"\nimport Input from \"components/Input\"\nimport Button from \"components/Button\"\nimport Spinner from \"components/Spinner\"\n\nclass Book extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      count: 1\n    }\n  }\n\n  componentDidMount() {\n    const {\n      fetchData,\n      match: {\n        params: { id = \"\" }\n      }\n    } = this.props\n\n    fetchData(id)\n  }\n\n  handleCountChange = ({ target: { value } }) =>\n    this.setState(() => ({\n      count: value\n    }))\n\n  handleAddToCart = ({ target: { value } }) => {\n    const {\n      addToCart,\n      item: { title, price }\n    } = this.props\n    const { count } = this.state\n\n    addToCart({ id: value, count, title, price })\n  }\n\n  render() {\n    const { count } = this.state\n    const { isLoading, item, cartCount } = this.props\n\n    const total = +(count * item.price).toFixed(2)\n    const disabled = +cartCount >= +item.count\n\n    if (isLoading) {\n      return (\n        <Container>\n          <Spinner growing />\n        </Container>\n      )\n    }\n\n    return (\n      <Container>\n        <Card.Row className=\"d-flex justify-content-center\">\n          <Card.Col className=\"col-12 col-sm-10 col-lg-8 col-xl-6\">\n            <Card className=\"p-4\">\n              <Card.Row>\n                <Card.Col className=\"col-12 col-md-4\">\n                  <Card.Cover src={item.cover} />\n                  <Card.Text className=\"p-4\">{item.description}</Card.Text>\n                </Card.Col>\n                <Card.Col className=\"col-12 col-md-4 pt-5\">\n                  <Card.Title>{item.title}</Card.Title>\n                  <Card.Text>{item.author}</Card.Text>\n                  <Card.Text>{item.level}</Card.Text>\n                  <Card.Text>{item.tags.join(\", \")}</Card.Text>\n                </Card.Col>\n                <Card.Col className=\"col-12 col-md-4 pt-5\">\n                  <FormGroup>\n                    <Card.Text className=\"d-flex\">\n                      <Card.Col>Price, $</Card.Col>\n                      <Card.Col className=\"text-right\">{item.price}</Card.Col>\n                    </Card.Text>\n                  </FormGroup>\n                  <FormGroup>\n                    <Card.Text className=\"d-flex\">\n                      <Card.Col>Count</Card.Col>\n                      <Card.Col className=\"d-flex justify-content-end\">\n                        <Input\n                          value={count}\n                          min={0}\n                          max={item.count}\n                          type=\"number\"\n                          disabled={disabled}\n                          onChange={this.handleCountChange}\n                        />\n                      </Card.Col>\n                    </Card.Text>\n                  </FormGroup>\n                  <FormGroup>\n                    <Card.Text className=\"d-flex\">\n                      <Card.Col>Total Price</Card.Col>\n                      <Card.Col className=\"text-right\">{total}</Card.Col>\n                    </Card.Text>\n                  </FormGroup>\n                  <FormGroup>\n                    <Card.Text className=\"text-right\">\n                      <Card.Col>\n                        <Button\n                          color=\"primary\"\n                          value={item.id}\n                          disabled={disabled}\n                          onClick={this.handleAddToCart}\n                        >\n                          Add to cart\n                        </Button>\n                      </Card.Col>\n                    </Card.Text>\n                  </FormGroup>\n                </Card.Col>\n              </Card.Row>\n            </Card>\n          </Card.Col>\n        </Card.Row>\n      </Container>\n    )\n  }\n}\n\nBook.propTypes = {\n  isLoading: PropTypes.bool,\n  fetchData: PropTypes.func.isRequired,\n  item: PropTypes.shape({})\n}\n\nBook.defaultProps = {\n  isLoading: true,\n  item: {\n    tags: [],\n    price: 0\n  }\n}\n\nconst mapStateToProps = (\n  state,\n  {\n    match: {\n      params: { id }\n    }\n  }\n) => ({\n  isLoading: isSingleLoadingSelector(state),\n  item: getBookById(id)(state),\n  cartCount: getCountById(id)(state)\n})\n\nconst mapDispatchToProps = {\n  fetchData: fetchSingleBook,\n  addToCart: cartActions.addToCart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Book)\n","/* eslint-disable import/no-named-as-default-member */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport actions from \"actions/cart\"\nimport {\n  cartLoadingSelector,\n  cartSummarySelector,\n  cartTotalPriceSelector,\n  booksIdSelector\n} from \"selectors/cart\"\n\nimport Container from \"components/Container\"\nimport Button from \"components/Button\"\nimport Spinner from \"components/Spinner\"\n\nconst Cart = ({ isLoading, isCartEmpty, items, total, itemsIds, purchase }) => {\n  const handlePurchase = () => purchase({ books: itemsIds })\n\n  if (isLoading) {\n    return (\n      <Container>\n        <Spinner text=\"Purchasing\" growing />\n      </Container>\n    )\n  }\n\n  return (\n    <>\n      <Container className=\"text-right mb-3\">\n        <Button\n          disabled={isCartEmpty || isLoading}\n          color=\"primary\"\n          onClick={handlePurchase}\n        >\n          Purchase\n        </Button>\n      </Container>\n\n      {isCartEmpty && !isLoading ? (\n        <Container className=\"text-center\">Cart Empty...</Container>\n      ) : (\n        <Container>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Book name</th>\n                <th scope=\"col\">Count</th>\n                <th scope=\"col\">Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              {items.map(item => (\n                <tr key={item.title}>\n                  <td>{item.title}</td>\n                  <td>{item.count}</td>\n                  <td align=\"right\">{item.total}</td>\n                </tr>\n              ))}\n              <tr>\n                <td colSpan=\"3\" align=\"right\">\n                  <b>Total price $ {total}</b>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </Container>\n      )}\n    </>\n  )\n}\n\nCart.propTypes = {\n  isLoading: PropTypes.bool,\n  items: PropTypes.arrayOf(PropTypes.shape({})),\n  total: PropTypes.number,\n  isCartEmpty: PropTypes.bool,\n  purchase: PropTypes.func.isRequired,\n  itemsIds: PropTypes.arrayOf(PropTypes.string)\n}\n\nCart.defaultProps = {\n  isLoading: false,\n  items: [],\n  total: 0,\n  isCartEmpty: false,\n  itemsIds: []\n}\n\nconst mapStateToProps = state => ({\n  isLoading: cartLoadingSelector(state),\n  items: cartSummarySelector(state),\n  total: cartTotalPriceSelector(state),\n  isCartEmpty: cartSummarySelector(state).length === 0,\n  itemsIds: booksIdSelector(state)\n})\n\nconst mapDispatchToProps = {\n  purchase: actions.purchase\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart)\n","import React from \"react\"\n\nimport Container from \"components/Container\"\nimport Button from \"components/Button\"\n\nconst NotFound = () => (\n  <Container className=\"text-center pt-5\">\n    <h1>Not Found</h1>\n    <Button to=\"/\" color=\"primary\">\n      Back to home page\n    </Button>\n  </Container>\n)\n\nexport default NotFound\n","import React from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\n\nimport Header from \"containers/Header\"\nimport GuestRoute from \"containers/routes/GuestRoute\"\nimport PrivateRoute from \"containers/routes/PrivateRoute\"\n\nimport SignIn from \"pages/SignIn\"\nimport Books from \"pages/Books\"\nimport Book from \"pages/Book\"\nimport Cart from \"pages/Cart\"\nimport NotFound from \"pages/NotFound\"\n\nconst App = () => (\n  <>\n    <Header />\n    <Switch>\n      <GuestRoute path=\"/signin\" exact component={SignIn} />\n      <PrivateRoute path=\"/books/:id\" exact component={Book} />\n      <PrivateRoute path=\"/\" exact component={Books} />\n      <PrivateRoute path=\"/cart\" exact component={Cart} />\n      <Route path=\"*\" exact component={NotFound} />\n    </Switch>\n  </>\n)\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport { PersistGate } from \"redux-persist/integration/react\"\nimport createStore from \"store\"\nimport * as serviceWorker from \"serviceWorker\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./styles/index.scss\"\n\nimport App from \"App\"\n\nexport const { store, persistor } = createStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}